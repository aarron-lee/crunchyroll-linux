name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "dev"
    tags:
      - "v*.*.*"

jobs:
  build_app:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: set git global safe directory
        run: |
          pacman -Syu git npm --noconfirm
          git config --global --add safe.directory $(realpath .)

      - uses: actions/checkout@v4

      - name: Setup latest Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup PNPM@10
        uses: pnpm/action-setup@v4
        with:
          version: "10.11.0"

      - name: Build Appimage
        run: |
          pnpm i
          pnpm run build
          chmod +x dist/Crunchyroll_v*_linux.AppImage
          mv dist/Crunchyroll_v*_linux.AppImage ./
          rm -rf dist
          pnpm run flatpak:build-unpacked
          zip -r crunchyroll_unpacked.zip ./dist
        continue-on-error: true

      - name: show files
        run: |
          ls ./Crunchyroll_v*_linux.AppImage
          ls ./crunchyroll_unpacked.zip

      - name: Publish Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: crunchyroll-linux
          path: |
            ./Crunchyroll_v*_linux.AppImage
            ./crunchyroll_unpacked.zip

  publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build_app
    steps:
      - run: mkdir /tmp/artifacts

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          path: /tmp/artifacts

      - run: ls -R /tmp/artifacts

      - name: publish to github release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /tmp/artifacts/crunchyroll-linux/Crunchyroll_v*_linux.AppImage
            /tmp/artifacts/crunchyroll-linux/crunchyroll_unpacked.zip
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: true
          prerelease: contains(github.ref, 'pre')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
